train<-read.csv("Tatanic/train.csv")
View(train)
View(train)
library(dplyr)
colMeans(is.na(train))
install.packages("rpart")
install.packages("rattle")
library(rpart)
rtModel1<-rpart(survived~.,train,cp=0.01)
rtModel1<-rpart(Survived~.,train,cp=0.01)
plot(rtModel1)
rtModel1<-rpart(Survived~.,train,cp=0.005)
plot(rtModel1)
library(rattle)
rtModel1<-rpart(Survived~Pclass+Sex+Age+SibSp+Fare+Embarked,train,cp=0.005)
plot(rtModel1)
library(rattle)
fancyRpartPlot(rtModel1)
install.packages("rpart.plot")
fancyRpartPlot(rtModel1)
rtGrid <- expand.grid(cp=seq(0.01, 0.2, by = 0.005))
# alpha is between 0 and 1: 0 (ridge), 1 (lasso).
########################################## training model
ctrl <- trainControl(method = "cv", number = 10,
verboseIter = T)
ctrl <- train(method = "cv", number = 10,
verboseIter = T)
library(rpart)
ctrl <- trainControl(method = "cv", number = 10,
verboseIter = T)
??trainControl
library(caret)
ctrl <- trainControl(method = "cv", number = 10,
verboseIter = T)
set.seed(1)
rtTune <- train(Survived~Pclass+Sex+Age+SibSp+Fare+Embarked, data = train,
method = "rpart",
tuneGrid = rtGrid,
metric='RMSE',
trControl = ctrl)
rtTune
plot(rtTune)
rtTune$bestTune
confusionMatrix(predict(rtTune, train), class_data[train], positive = "1")
confusionMatrix(predict(rtTune, train), train, positive = "1")
??confusionMatrix
confusionMatrix(train,Survived, positive = "1")
confusionMatrix(train,Survived, positive == "1")
confusionMatrix(train$Survived, positive == "1")
confusionMatrix(train$Survived, positive == 1)
confusionMatrix(train$Survived, positive = 1)
confusionMatrix(train,train$Survived, positive = 1)
